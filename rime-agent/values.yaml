rimeAgent:
  verbose: true
  nameOverride:
  fullNameOverride:

  # rimeAgent.id -- unique ID for this Agent. Can be left blank if this is a internal agent.

  ## This id is provided by the RI Platform Control Plane when creating external agents.
  ## For internal agents, this field is not used, and the internal agent will register with the
  ## Control Plane during startup and get the ID to use at that point.
  id:

  # rimeAgent.apiKey -- the API key the agent will use to communicate with the RI Platform.

  ## If not set, the agent must be installed in the same cluster as the RI Platform.
  apiKey:

  # rimeAgent.platformAddress -- the address of the RI Platform this agent should communicate with.

  ## If not set, the agent must be installed in the same cluster as the RI Platform.
  platformAddress:  # your-company.rbst.io

  ## Configuration for Image Pull Secret, used to create a Secret of type kubernetes.io/dockerconfigjson.
  ## All three fields of rimeAgent.dockerCredentials must be specified.
  ## These credentials are used to access both the Agent image itself and model testing images.
  ## See https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry
  dockerCredentials:
    # rimeAgent.dockerCredentials.registry -- the name of the Docker registry to authenticate with
    registry:  # https://index.docker.io/v2/
    # rimeAgent.dockerCredentials.username -- username of a Docker account with authorization to access Robust Intelligence images
    username:
    # rimeAgent.dockerCredentials.username -- password for docker login to account with access to Robust Intelligence Images
    password:

  # rimeAgent.dockerCredentialsPayload -- pre-configured json encoded string of k8s docker config secret

  ## providing rimeAgent.dockerCredentialsPayload will override any provided inputs in rimeAgent.dockerCredentials
  dockerCredentialsPayload:  # '{"auths":{"https://index.docker.io/v2/":{"auth":"cm9...hZA="}}}'

  # rimeAgent.imagePullSecrets -- use existing image pull secrets in your k8s cluster, overriding rimeAgent.dockerCredentials

  ## Note that the credentials should provide access to both the Agent image and model testing images.
  imagePullSecrets: []
    # - name: <secret name>

  ## Configurations for the Agent image.
  image:
    # rimeAgent.image.name -- the name and tag of the rime agent image.
    name: "robustintelligencehq/rime-agent:latest"
    # rimeAgent.image.pullPolicy -- see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    pullPolicy: Always

  ## Configurations for running the agent with a mounted host path volume for data and model files.
  local:
    # rimeAgent.local.enabled -- If true, host path volumes will be mounted on containers of model test jobs.
    enabled: false

    # rimeAgent.local.hostPath -- the absolute path of the directory on the node to mount onto the agent. Default "/ri-platform/local".

    ## This path must exist on the node that model testing jobs run on. The directory must be added during k8s cluster setup.
    ## This directory will be mounted into the container and can be accessed according to rimeAgent.local.mountPath.
    hostPath: "/ri-platform/local"

    # rimeAgent.local.mountPath -- the absolute path where the local data (from hostPath) will be mounted in the container. Default "/ri-platform/local".

    ## To access data and models, in job configuration, specify: <mountPath>/<your-data>.csv
    mountPath: "/ri-platform/local"

  # Job Manager Address in the CP. Used by multiple agent services.
  jobManagerAddr:

  # gRPC Web Server Address in the CP. Used by multiple agent services.
  grpcWebServerAddr:

  # rimeAgent.agentManagerAddr -- internal address of the Control Plane's agent management service.

  ## This value will be ignored for external agents that use rimeAgent.platformAddress to connect to the control plane
  agentManagerAddr:

  ## Configurations related to the model testing jobs launched by this agent.
  modelTestJob:
    # rimeAgent.modelTestJob.configMapName -- name of the config map used by model test jobs for environment variables.

    ## Note: it is very unlikely that this needs to be changed from the default. Doing so without caution may
    ## cause jobs to be configured incorrectly and fail to launch.
    configMapName: "rime-agent-model-testing-conf"

    ## Configure rbac ServiceAccount for the jobs launched by this agent. For example, granting S3 read permissions.
    serviceAccount:
      # rimeAgent.modelTestJob.serviceAccount.create -- Specifies whether a ServiceAccount should be created.
      create: true

      # rimeAgent.modelTestJob.serviceAccount.name -- Specify a preexisting ServiceAccount to use if create is false.
      name:

      # rimeAgent.modelTestJob.serviceAccount.annotations -- if create is true, annotations to add to the service account.

      ## Since data is stored in a cloud storage (e.g. S3, GCS), add an annotation to allow read access here.
      ## EKS IAM setup for S3: https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html
      ## GKE IAM setup for GCS: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
      annotations: {}
      #   eks.amazonaws.com/role-arn: <S3 read access role arn>
      #   iam.gke.io/gcp-service-account: <GCS service account email>

    uploadServerAddr:
    firewallServerAddr:
    dataCollectorAddr:

  jobMonitor:
    deployment:
      resources:
        requests:
          memory: "100Mi"
          cpu: "100m"
        limits:
          memory: "500Mi"
          cpu: "500m"
    logArchival:
      enabled: false
      storageBucketName: ""
      endpoint: ""
      type: ""
    rbac:
      # Specifies whether RBAC resources should be created
      create: true
    serviceAccount:
      # Specifies whether a ServiceAccount should be created
      create: true
      # The name of the ServiceAccount to use.
      # If not set and create is true, a name is generated using the fullname template
      # This account has special priveleges to read and write to S3 bucket used for blob storage.
      annotations: {
        eks.amazonaws.com/role-arn: ""
      }
      name:

  launcher:
    deployment:
      resources:
        requests:
          memory: "100Mi"
          cpu: "100m"
        limits:
          memory: "500Mi"
          cpu: "500m"

    # rimeAgent.launcher.requestQueueProxyAddr -- the address of the request queue proxy service. Only specify for internal agents.
    requestQueueProxyAddr:

    rbac:
      # Specifies whether RBAC resources should be created
      create: true
    serviceAccount:
      # Specifies whether a ServiceAccount should be created
      create: true
      # The name of the ServiceAccount to use.
      # If not set and create is true, a name is generated using the fullname template
      name:

  # rimeAgent.datadogTagPodAnnotation -- annotation for setting Datadog tagging on the pod. Only for deployment with Datadog installed.
  # Must be a string that is valid JSON.
  datadogTagPodAnnotation:
