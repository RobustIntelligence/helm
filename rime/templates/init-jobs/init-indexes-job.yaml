{{- if .Values.rime.initIndexes.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "rime.fullname" . }}-{{ .Values.rime.initIndexes.name }}
  labels:
    {{- include "rime.labels" . | nindent 4 }}
    {{- with .Values.rime.initIndexes.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    # NOTE: post-upgrade relies on the database-setup script being idempotent.
    "helm.sh/hook": post-install,post-upgrade
    # Hooks are sorted in ascending order.
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- include "rime.annotations" . | nindent 4 }}
    {{- with .Values.rime.initIndexes.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  template:
    metadata:
      labels:
        {{- include "rime.labels" . | nindent 8 }}
        {{- with .Values.rime.initIndexes.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- include "rime.annotations" . | nindent 8 }}
        {{- with .Values.rime.initIndexes.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.rime.images.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.rime.initIndexes.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: database-setup
          image: "{{ .Values.rime.images.backendImage.registry}}/{{ .Values.rime.images.backendImage.name }}"
          imagePullPolicy: "{{ .Values.rime.images.backendImage.pullPolicy }}"
          command:
            - "/rime/dbworker"
          args:
            - "create-indices"
            - "--server-config-path=/config/worker.config"
            # 4 minute timeout because the maximum execution time for a helm chart hook is 5 min.
            - "-timeout=4m"
            {{- if .Values.rime.verbose }}
            - "-verbose"
            {{- end }}
            {{- if .Values.rime.initIndexes.debug }}
            - "-debug"
            {{- end}}
          volumeMounts:
            - name: {{ include "rime.fullname" . }}-worker-config
              mountPath: "/config"
              readOnly: true
            {{- if .Values.tls.enableCertManager }}
            - name: {{ include "rime.fullname" . }}-{{ .Values.rime.initIndexes.name }}-tls
              mountPath: /var/tmp/tls/common
              readOnly: true
            {{- end }}
            {{- include "rime.externalTLSSecretVolumeMounts" . | nindent 12 }}
      restartPolicy: OnFailure
      volumes:
        - name: {{ include "rime.fullname" . }}-worker-config
          configMap:
            name: {{ include "rime.fullname" . }}-worker-conf
            items:
              - key: "worker.config"
                path: "worker.config"
        {{- if .Values.tls.enableCertManager }}
        - name: {{ include "rime.fullname" . }}-{{ .Values.rime.initIndexes.name }}-tls
          secret:
            secretName: {{ include "rime.fullname" . }}-{{ .Values.rime.initIndexes.name }}-tls
        {{- end }}
        {{- include "rime.externalTLSSecretVolumes" . | nindent 8 }}
  backoffLimit: {{ .Values.rime.initIndexes.backoffLimit }}
{{- end }}
