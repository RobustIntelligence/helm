{{- if not .Values.riFirewall.modelServers.toxicity.remoteModelServer.enabled }}
# Autogenerated by a script. DO NOT EDIT.
apiVersion: serving.kserve.io/v1beta1
kind: InferenceService
metadata:
  name: toxicity
  annotations:
    {{- include "ri-firewall.annotations" . | nindent 4 }}
spec:
  predictor:
    {{- with .Values.riFirewall.images.imagePullSecrets }}
    imagePullSecrets:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    minReplicas: {{ .Values.riFirewall.modelServers.toxicity.minReplicas }}
    maxReplicas: {{ .Values.riFirewall.modelServers.toxicity.maxReplicas }}
    containers:
      - name: toxicity
        image: "{{ .Values.riFirewall.images.modelServerImage.registry}}/{{ .Values.riFirewall.images.modelServerImage.name }}"
        imagePullPolicy: {{ .Values.riFirewall.images.modelServerImage.pullPolicy }}
        env:
          - name: HUGGINGFACE_API_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.riFirewall.secrets.existingIntegrationSecretsName }}
                key: huggingfaceAPIKey
        ports:
          - name: rest
            protocol: TCP
            containerPort: 8080
        command:
          - "run_server"
        args:
          - "--model-config-path={{ .Values.riFirewall.modelServers.modelSettingsPath }}/model-settings.json"
          - "--cache-dir=/model_cache"
        resources:
          requests:
            memory: {{ .Values.riFirewall.modelServers.toxicity.resources.requests.memory }}
            cpu: {{ .Values.riFirewall.modelServers.toxicity.resources.requests.cpu }}
          limits:
            memory: {{ .Values.riFirewall.modelServers.toxicity.resources.limits.memory }}
            cpu: {{ .Values.riFirewall.modelServers.toxicity.resources.limits.cpu }}
        volumeMounts:
          - name: {{ include "ri-firewall.fullname" . }}-toxicity-config
            mountPath: {{ .Values.riFirewall.modelServers.modelSettingsPath }}
            readOnly: true
          - name: {{ include "ri-firewall.fullname" . }}-toxicity-model-cache
            mountPath: "/model_cache"
            readOnly: false
    volumes:
      # Volumes are defined at the Pod level, then mounted into containers within that Pod
      - name: {{ include "ri-firewall.fullname" . }}-toxicity-config
        configMap:
          name: {{ include "ri-firewall.fullname" . }}-toxicity-conf
          items:
            - key: "model-settings.json"
              path: "model-settings.json"
      - name: {{ include "ri-firewall.fullname" . }}-toxicity-model-cache
        emptyDir: { }
{{- end }}
