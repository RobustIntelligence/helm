rimeSystem:
  # -- Whether to install the Kubernetes Autoscaler Helm chart.
  # For full reference, see https://github.com/kubernetes/autoscaler/tree/cluster-autoscaler-1.26.6/cluster-autoscaler/cloudprovider
  clusterAutoscaler: false
  # -- Whether to install the ExternalDNS Helm chart.
  # For full reference, see https://github.com/kubernetes-sigs/external-dns/tree/v0.12.0/charts/external-dns
  externalDns: false
  # -- Whether to install the AWS Load Balancer Controller Helm chart.
  # For full reference, see https://github.com/kubernetes-sigs/aws-load-balancer-controller/tree/v2.5.4
  awsLoadBalancerController: false
  # -- Whether to install the Kubernetes Metrics Server Helm chart.
  # For full reference, see https://github.com/kubernetes-sigs/metrics-server/tree/v0.6.1
  metricsServer: false
  # -- Whether to install the ingress-nginx Helm chart.
  # For full reference, see See https://artifacthub.io/packages/helm/ingress-nginx/ingress-nginx
  ingressNginx: false
  # -- Whether to install the Kserve Helm chart.
  # For full reference, see See https://github.com/kserve/kserve
  kserve: false
# -- For full reference, see https://github.com/cert-manager/cert-manager/tree/v1.10.0
# @default -- (see individual values in `values`.yaml)
cert-manager:
  enabled: true
  installCRDs: true
  global:
    imagePullSecrets:
      - name: rimecreds
  image:
    registry: docker.io
    repository: robustintelligencehq/cert-manager-controller
    tag: "v1.10.0"
  webhook:
    image:
      registry: docker.io
      repository: robustintelligencehq/cert-manager-webhook
      tag: "v1.10.0"
  cainjector:
    image:
      registry: docker.io
      repository: robustintelligencehq/cert-manager-cainjector
      tag: "v1.10.0"
  startupapicheck:
    image:
      registry: docker.io
      repository: robustintelligencehq/cert-manager-ctl
      tag: "v1.10.0"

# # -- For full reference, see https://github.com/kserve/kserve
# # @default -- (see individual values in `values`.yaml)
# kserve:
#   kserve:
#     # Do not use the Serverless mode; it requires Istio to be installed.
#     # RawDeployment is enough for serving models internally with long-running
#     # deployments.
#     controller:
#       deploymentMode: "RawDeployment"
#       # Bump up the resources to avoid OOMkills; we have seen empirical
#       # OOMkills with the default configuration of 300Mi.
#       resources:
#         limits:
#           memory: 500Mi
#         requests:
#           memory: 500Mi
#     # We do not use ModelMesh; it is an advanced feature for serving multiple
#     # models from a single container.
#     modelmesh:
#       enabled: false

# TODO CLD-1275 Incorporate these standard templates into an AWS example
# # -- For full reference, see https://github.com/kubernetes-sigs/aws-load-balancer-controller/tree/v2.6.1
# # @default -- (see individual values in `values`.yaml)
# aws-load-balancer-controller:
#   image:
#     repository: "docker.io/robustintelligencehq/aws-alb-ingress-controller"
#     tag: "v2.6.1"
#   # -- EKS cluster name
#   clusterName: ""
#   serviceAccount:
#     create: true
#     annotations:
#       # -- Specify ARN of IRSA-enabled Load Balancer Controller IAM role here
#       eks.amazonaws.com/role-arn: ""
#   # -- EKS cluster's AWS region
#   region: ""

# # -- For full reference, see https://github.com/kubernetes/autoscaler/tree/cluster-autoscaler-1.21.0/cluster-autoscaler/cloudprovider
# # (follow the instructions for your cloud provider)
# # @default -- (see individual values in `values`.yaml)
# cluster-autoscaler:
#   image:
#     repository: "docker.io/robustintelligencehq/cluster-autoscaler"
#     tag: "v1.21.0"
#     pullSecrets:
#       - rimecreds
#   autoDiscovery:
#     # -- EKS cluster name
#     clusterName: ""
#   # -- EKS cluster's AWS region
#   cloudProvider: aws
#   rbac:
#     serviceAccount:
#       annotations: {
#         # -- Specify ARN of IRSA-enabled Cluster Autoscaler IAM role here
#         eks.amazonaws.com/role-arn: ""
#       }

# # -- For full reference, see https://github.com/kubernetes-sigs/external-dns/tree/v0.12.0/charts/external-dns
# # @default -- (see individual values in `values`.yaml)
# external-dns:
#   image:
#     repository: "docker.io/robustintelligencehq/external-dns"
#     tag: "v0.12.0"
#   provider: "aws"
#   policy: sync
#   registry: txt
#   txtOwnerId: "rime"
#   logFormat: json
#   rbac:
#     create: true
#   serviceAccount:
#     annotations:
#       # -- Specify ARN of IRSA-enabled Cluster Autoscaler IAM role here
#       eks.amazonaws.com/role-arn: ""

# # -- For full reference, see https://github.com/kubernetes-sigs/metrics-server/tree/v0.6.1
# # @default -- (see individual values in `values`.yaml)
# metrics-server:
#   image:
#     repository: "docker.io/robustintelligencehq/metrics-server"
#     tag: "v0.6.1"
#   imagePullSecrets:
#     - rimecreds

# -- Ingress-nginx controller sub-chart. See https://artifacthub.io/packages/helm/ingress-nginx/ingress-nginx for all parameters.
# @default -- (see individual values in `values`.yaml)
# ingress-nginx:
#  enabled: true
#  imagePullSecrets:
#    - name: rimecreds
#  controller:
#    image:
#      registry: "docker.io"
#      image: "robustintelligencehq/ingress-nginx-controller"
#      tag: "v1.8.1"
#      digest: "sha256:bd54c330f73b17d0bf19f3ec3832b285d43a4c9fa5fe15f5a7accd3de706b438"
#    scope:
#      enabled: true
#      # -- K8s namespace for the ingress
#      namespace: ""
#    ingressClassResource:
#      name: ri
#      controllerValue: k8s.io/ri
#    admissionWebhooks:
#      enabled: false
#    service:
#      targetPorts:
#        http: http
#        https: http
#      # -- For full list of annotations, see
#      # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/service/annotations/
#      annotations:
#        # -- Specifies the ARN of one or more certificates managed by the AWS Certificate Manager.
#        service.beta.kubernetes.io/aws-load-balancer-ssl-cert: ""
#        # -- NLB specification: either "internal" or "internet-facing"
#        service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
#        # # -- Uncomment if using an IP allowlist
#        # # (Set of CIDR routes to add to the allowlist for all ingresses.
#        # #  If not specified, all IP addresses are allowed.)
#        # service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=true
#        # Specifies the frontend ports with TLS listeners.
#        service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
#        service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
#        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
#        # Load balancer type: either "external" or "nlb-ip"
#        service.beta.kubernetes.io/aws-load-balancer-type: "external"
#        # Needed for routing to pod IP
#        service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
#    config:
#      force-ssl-redirect: "false"
#      ssl-redirect: "false"
